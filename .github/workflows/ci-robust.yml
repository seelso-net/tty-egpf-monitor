name: CI Robust

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install basic dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          clang \
          make \
          libelf-dev \
          zlib1g-dev \
          pkg-config \
          build-essential \
          linux-headers-generic \
          libbpf-dev

    - name: Try to install bpftool from package
      run: |
        sudo apt-get install -y bpftool || echo "bpftool not available in package manager"

    - name: Build bpftool from source if needed
      if: steps.bpftool-check.outputs.available != 'true'
      run: |
        echo "Building bpftool from source..."
        sudo apt-get install -y \
          libcap-dev \
          libpcap-dev \
          libbfd-dev \
          binutils-dev \
          libreadline-dev \
          libssl-dev \
          libnuma-dev \
          cmake \
          ninja-build \
          llvm
        
        # Try different kernel versions for bpftool
        for version in v6.6 v6.5 v6.4 v6.3; do
          echo "Trying kernel version $version..."
          git clone --depth 1 --branch $version https://github.com/torvalds/linux.git /tmp/linux-$version || continue
          cd /tmp/linux-$version/tools/bpf/bpftool
          make -j$(nproc) && sudo make install && break || echo "Failed with version $version"
          cd /
          rm -rf /tmp/linux-$version
        done
        
        sudo ldconfig

    - name: Check bpftool availability
      id: bpftool-check
      run: |
        if command -v bpftool >/dev/null 2>&1; then
          echo "available=true" >> $GITHUB_OUTPUT
          bpftool --version
        else
          echo "available=false" >> $GITHUB_OUTPUT
          echo "bpftool not found"
        fi

    - name: Check kernel BTF support
      run: |
        if [ -f /sys/kernel/btf/vmlinux ]; then
          echo "Kernel BTF support available"
          ls -la /sys/kernel/btf/vmlinux
        else
          echo "Warning: Kernel BTF support not available"
          echo "This may cause build issues"
        fi

    - name: Build application
      run: |
        make clean
        make

    - name: Verify build artifacts
      run: |
        echo "Build artifacts:"
        ls -la build/
        
        if [ -f build/sermon ]; then
          echo "Binary verification:"
          file build/sermon
          test -x build/sermon
          echo "Binary dependencies:"
          ldd build/sermon || echo "ldd failed, but binary exists"
        else
          echo "ERROR: Binary not found!"
          exit 1
        fi

    - name: Test basic functionality
      run: |
        echo "Testing basic functionality..."
        echo "Checking binary properties (not executing eBPF programs on runner)..."
        
        # Just verify the binary exists and has correct properties
        if [ -f build/sermon ]; then
          echo "Binary exists and is executable"
          file build/sermon
          echo "Binary size: $(stat -c%s build/sermon) bytes"
          echo "Binary permissions: $(stat -c%a build/sermon)"
        else
          echo "ERROR: Binary not found!"
          exit 1
        fi

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: build/
        retention-days: 7

    - name: Upload build logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          build/
          /tmp/
        retention-days: 1


