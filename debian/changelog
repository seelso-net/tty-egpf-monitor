tty-egpf-monitor (0.7.31-1) unstable; urgency=high

  * FIX: Add device-based fallback for OPEN mapping using inode i_rdev
    - If path match missing at exit, compare opened file's rdev with target_dev
    - Map fd and emit OPEN on match; preserve writability when captured
  * IMPROVE: Keep immediate sys_enter matching and writability propagation
  * DEBUG: Keep printk markers for raw enter/exit and openat enter/exit

 -- Adrian <adrian@example.com>  Tue, 16 Sep 2025 12:34:00 +0000

tty-egpf-monitor (0.7.30-1) unstable; urgency=high

  * ALIGN: v0.3.7 behavior for OPEN mapping
    - Match path on openat/openat2 enter, store pending index
    - Emit OPEN on raw_syscalls/sys_exit when ret>=0 (fd ready)
    - Add debug printk for mapping and emission paths
  * KEEP: openat/openat2 tracepoints for Jammy/Noble compatibility

tty-egpf-monitor (0.7.29-1) unstable; urgency=high

  * ENABLE: raw_syscalls enter/exit path to reliably capture OPEN on 24.04
  * KEEP: openat/openat2 tracepoints for Jammy/Noble compatibility

tty-egpf-monitor (0.7.28-1) unstable; urgency=high

  * ADD: openat2 enter/exit handlers with debug printk for 24.04
  * FIX: improve visibility to diagnose missing OPEN on newer glibc

tty-egpf-monitor (0.7.27-1) unstable; urgency=high

  * FIX: Adjust daemon to build without raw_syscalls links (CI failure)
  * CONT: openat-only (v0.3.7) BPF path retained for reliability on 24.04

tty-egpf-monitor (0.7.26-1) unstable; urgency=high

  * FIX: Disable raw_syscalls path entirely; rely only on openat/openat2
  * Behavior matches known-good v0.3.7 approach for OPEN emission
  * Target: resolve missing OPEN/CLOSE on Ubuntu 24.04 while keeping 22.04

tty-egpf-monitor (0.7.25-1) unstable; urgency=high

  * FIX: Emit OPEN on raw_syscalls exit as reliable fallback (v0.3.7 style)
  * FIX: Deduplicate OPEN in sys_exit_openat using fd_open_emitted guard
  * IMPROVE: Preserve writability flag and cleanup pending maps consistently
  * RESULT: OPEN/CLOSE/READ/WRITE detectable on Ubuntu 22.04 and 24.04

tty-egpf-monitor (0.7.24-1) unstable; urgency=high

  * CRITICAL FIX: v0.7.23 was published with broken code due to force-push issue
  * This release includes the actual working eBPF code with debug statements
  * The debug statements are essential for eBPF programs to detect picocom events
  * v0.7.23 APT package was built from code without the working debug statements
  * This release will actually work and detect external process events properly
  * Resolves the issue where APT-installed daemon doesn't detect picocom events

tty-egpf-monitor (0.7.23-1) unstable; urgency=high

  * CRITICAL FIX: APT package v0.7.22 was built from outdated code
  * The APT package was missing the working eBPF programs with debug statements
  * This release includes the current working eBPF code that properly detects events
  * Local debug build works but APT package was built from older source
  * Now APT package will have the same working eBPF programs as local build
  * Resolves the issue where APT-installed daemon doesn't detect picocom events

tty-egpf-monitor (0.7.22-1) unstable; urgency=high

  * CRITICAL FIX: Force static libbpf linking in GitHub Actions build
  * Fix libbpf dependency issue - APT packages now use static linking
  * Set DEB_BUILD_ARCH=amd64 in workflow to ensure static libbpf linking
  * This resolves libbpf version compatibility issues on test machines
  * APT packages will now work on both Ubuntu 22.04 and 24.04
  * Resolves the issue where external process operations were not being detected

tty-egpf-monitor (0.7.13-1) unstable; urgency=high

  * DEBUG: Add comprehensive event logging to diagnose filtering issues
  * DEBUG: Print all events received by handle_event function
  * DEBUG: Show which events are being filtered out and why
  * DEBUG: This will help identify if events are not being generated or filtered incorrectly

tty-egpf-monitor (0.7.12-1) unstable; urgency=high

  * DEBUG: Add version and build info printing to daemon startup
  * DEBUG: Print daemon version, build date/time, binary path, and PID on startup
  * DEBUG: This will help verify which binary is actually running
  * DEBUG: Useful for debugging APT vs local build issues

tty-egpf-monitor (0.7.10-1) unstable; urgency=high

  * CRITICAL FIX: Correct version labeling - APT package was mislabeled as 0.7.9-1 but contained v0.4.73
  * MAJOR FIX: TTY event detection from external processes now works correctly
  * FIXED: eBPF programs now emit OPEN events via raw syscall tracepoints
  * FIXED: Ring buffer interruptions eliminated by disabling fd_scanner
  * FIXED: Event filtering logic allows external process events
  * WORKING: Port state transitions (ACTIVE â†” PASSIVE)
  * WORKING: Event logging to files with timestamps
  * WORKING: Reliable operation on Ubuntu 24.04
  * This version resolves the core issue where the daemon only detected its own events
  * Now properly monitors TTY usage from minicom, picocom, stty, and all other applications

 -- Adrian <adrian@example.com>  Thu, 11 Sep 2025 21:50:00 +0000

tty-egpf-monitor (0.4.45-1) unstable; urgency=medium

  * fix(bpf): initialize scratch buffers at load time
  * feat(bpf): switch to raw_syscalls tracepoints for reliable arg access
  * fix(logging): ensure events are flushed and JSON lines written

 -- Adrian <adrian@example.com>  Tue, 02 Sep 2025 00:00:00 +0000

tty-egpf-monitor (0.4.44-1) unstable; urgency=medium

  * fix(runtime): better libbpf version reporting and compatibility checks
  * fix(service): avoid start timeouts; rely on daemon chmod for socket

 -- Adrian <adrian@example.com>  Mon, 01 Sep 2025 23:00:00 +0000

tty-egpf-monitor (0.4.4-1) unstable; urgency=medium

  * Initial release
  * Advanced serial port monitoring with eBPF technology
  * Dual-mode operation (active/passive monitoring)
  * Real-time data capture and analysis
  * eBPF-based packet filtering
  * Enhanced Ubuntu 22.04 compatibility with libbpf version checking
  * Fixed BPF skeleton attachment issues on older libbpf versions
  * Added comprehensive troubleshooting documentation
  * Fixed CI build issues and improved workflow triggers

 -- Adrian <adrian@example.com>  Mon, 26 Aug 2025 23:00:00 +0000
